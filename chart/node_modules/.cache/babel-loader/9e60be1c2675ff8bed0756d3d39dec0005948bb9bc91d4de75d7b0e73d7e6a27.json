{"ast":null,"code":"var _jsxFileName = \"/home/rueshyna/Documents/rueshyna/marigold/safe-inside/src/component/BalanceBarChart.tsx\";\nimport React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport data from '../data/contracts.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst BalanceBarChart = () => {\n  let chartData = {\n    labels: [],\n    datasets: []\n  };\n  const labels = data.map(item => item.address);\n  const balances = data.map(item => item.balance);\n  chartData = {\n    labels,\n    datasets: [{\n      label: 'Balance',\n      data: balances,\n      backgroundColor: 'rgba(54, 162, 235, 0.6)'\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_c = BalanceBarChart;\nexport default BalanceBarChart;\nvar _c;\n$RefreshReg$(_c, \"BalanceBarChart\");","map":{"version":3,"names":["React","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","data","jsxDEV","_jsxDEV","register","BalanceBarChart","chartData","labels","datasets","map","item","address","balances","balance","label","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rueshyna/Documents/rueshyna/marigold/safe-inside/src/component/BalanceBarChart.tsx"],"sourcesContent":["import React from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { ChartData, Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport data from '../data/contracts.json'\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\ntype balanceBarChart = ChartData<'bar', number[], string>;\n\n\nconst BalanceBarChart: React.FC = () => {\n\n  let chartData : balanceBarChart = {\n    labels: [],\n    datasets: []\n  }\n\n  const labels = data.map((item: any) => item.address);\n  const balances = data.map((item: any) => item.balance);\n\n  chartData = {\n    labels,\n    datasets: [\n      {\n        label: 'Balance',\n        data: balances,\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      }\n    ],\n  };\n\n  return <Bar data={chartData} />;\n};\n\nexport default BalanceBarChart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAAoBC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AACtH,OAAOC,IAAI,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzCT,OAAO,CAACU,QAAQ,CAACT,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAKhF,MAAMK,eAAyB,GAAGA,CAAA,KAAM;EAEtC,IAAIC,SAA2B,GAAG;IAChCC,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACZ,CAAC;EAED,MAAMD,MAAM,GAAGN,IAAI,CAACQ,GAAG,CAAEC,IAAS,IAAKA,IAAI,CAACC,OAAO,CAAC;EACpD,MAAMC,QAAQ,GAAGX,IAAI,CAACQ,GAAG,CAAEC,IAAS,IAAKA,IAAI,CAACG,OAAO,CAAC;EAEtDP,SAAS,GAAG;IACVC,MAAM;IACNC,QAAQ,EAAE,CACR;MACEM,KAAK,EAAE,SAAS;MAChBb,IAAI,EAAEW,QAAQ;MACdG,eAAe,EAAE;IACnB,CAAC;EAEL,CAAC;EAED,oBAAOZ,OAAA,CAACX,GAAG;IAACS,IAAI,EAAEK;EAAU;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAACC,EAAA,GAtBIf,eAAyB;AAwB/B,eAAeA,eAAe;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}