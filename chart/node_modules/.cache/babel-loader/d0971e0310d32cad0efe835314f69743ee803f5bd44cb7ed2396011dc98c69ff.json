{"ast":null,"code":"var _jsxFileName = \"/home/rueshyna/Documents/rueshyna/marigold/safe-inside/src/component/TransactionsLineChart.tsx\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport data from '../data/contracts.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst TransactionsLineChart = () => {\n  const chartData = {\n    labels: data.map(contract => contract.firstActivityTime.split('T')[0]),\n    // Extracting just the date part\n    datasets: [{\n      label: 'Number of Transactions',\n      data: data.map(contract => contract.numTransactions),\n      fill: false,\n      borderColor: 'rgb(75, 192, 192)',\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n};\n_c = TransactionsLineChart;\nexport default TransactionsLineChart;\nvar _c;\n$RefreshReg$(_c, \"TransactionsLineChart\");","map":{"version":3,"names":["React","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","data","jsxDEV","_jsxDEV","register","TransactionsLineChart","chartData","labels","map","contract","firstActivityTime","split","datasets","label","numTransactions","fill","borderColor","tension","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rueshyna/Documents/rueshyna/marigold/safe-inside/src/component/TransactionsLineChart.tsx"],"sourcesContent":["import React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n} from 'chart.js';\nimport data from '../data/contracts.json'\n\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst TransactionsLineChart: React.FC = () => {\n  const chartData = {\n    labels: data.map(contract => contract.firstActivityTime.split('T')[0]), // Extracting just the date part\n    datasets: [\n      {\n        label: 'Number of Transactions',\n        data: data.map(contract => contract.numTransactions),\n        fill: false,\n        borderColor: 'rgb(75, 192, 192)',\n        tension: 0.1\n      },\n    ],\n  };\n\n  return <Line data={chartData} />;\n};\n\nexport default TransactionsLineChart;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SACEC,KAAK,IAAIC,OAAO,EAChBC,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MAAM,QACD,UAAU;AACjB,OAAOC,IAAI,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGzCV,OAAO,CAACW,QAAQ,CACdV,aAAa,EACbC,WAAW,EACXC,YAAY,EACZC,WAAW,EACXC,KAAK,EACLC,OAAO,EACPC,MACF,CAAC;AAED,MAAMK,qBAA+B,GAAGA,CAAA,KAAM;EAC5C,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAEN,IAAI,CAACO,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACC,iBAAiB,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAAE;IACxEC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,wBAAwB;MAC/BZ,IAAI,EAAEA,IAAI,CAACO,GAAG,CAACC,QAAQ,IAAIA,QAAQ,CAACK,eAAe,CAAC;MACpDC,IAAI,EAAE,KAAK;MACXC,WAAW,EAAE,mBAAmB;MAChCC,OAAO,EAAE;IACX,CAAC;EAEL,CAAC;EAED,oBAAOd,OAAA,CAACZ,IAAI;IAACU,IAAI,EAAEK;EAAU;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC,CAAC;AAACC,EAAA,GAfIjB,qBAA+B;AAiBrC,eAAeA,qBAAqB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}